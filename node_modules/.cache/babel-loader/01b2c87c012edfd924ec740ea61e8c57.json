{"ast":null,"code":"import _slicedToArray from \"/Users/ralowe/git/reactUiTesting/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ralowe/git/reactUiTesting/src/components/react-testing-lib/test_hook_reducer.js\";\nimport React, { useReducer } from 'react';\nimport * as ACTIONS from '../store/actions';\nimport * as Reducer from '../store/reducer';\n\nconst TestHookReducer = () => {\n  const _useReducer = useReducer(Reducer.Reducer1, Reducer.initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        reducerState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const dispatchActionSuccess = () => {\n    dispatch(ACTIONS.SUCCESS);\n  };\n\n  const dispatchActionFailure = () => {\n    dispatch(ACTIONS.FAILURE);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, reducerState.stateprop1 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"stateprop1 is true\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"stateprop1 is false\")), React.createElement(\"button\", {\n    onClick: dispatchActionSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Dispatch Success\"));\n};\n\nexport default TestHookReducer;","map":{"version":3,"sources":["/Users/ralowe/git/reactUiTesting/src/components/react-testing-lib/test_hook_reducer.js"],"names":["React","useReducer","ACTIONS","Reducer","TestHookReducer","Reducer1","initialState","reducerState","dispatch","dispatchActionSuccess","SUCCESS","dispatchActionFailure","FAILURE","stateprop1"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA,sBACKH,UAAU,CAACE,OAAO,CAACE,QAAT,EAAmBF,OAAO,CAACG,YAA3B,CADf;AAAA;AAAA,QACrBC,YADqB;AAAA,QACPC,QADO;;AAG5B,QAAMC,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,QAAQ,CAACN,OAAO,CAACQ,OAAT,CAAR;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAG,MAAM;AAClCH,IAAAA,QAAQ,CAACN,OAAO,CAACU,OAAT,CAAR;AACD,GAFD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,YAAY,CAACM,UAAb,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHN,CADH,EAMG;AAAQ,IAAA,OAAO,EAAEJ,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANH,CADF;AAYD,CAxBD;;AA2BA,eAAeL,eAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport * as ACTIONS from '../store/actions'\r\nimport * as Reducer from '../store/reducer'\r\n\r\n\r\nconst TestHookReducer = () => {\r\n  const [reducerState, dispatch] = useReducer(Reducer.Reducer1, Reducer.initialState)\r\n\r\n  const dispatchActionSuccess = () => {\r\n    dispatch(ACTIONS.SUCCESS)\r\n  }\r\n\r\n  const dispatchActionFailure = () => {\r\n    dispatch(ACTIONS.FAILURE)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div>\r\n        {reducerState.stateprop1\r\n           ? <p>stateprop1 is true</p>\r\n           : <p>stateprop1 is false</p>}\r\n       </div>\r\n       <button onClick={dispatchActionSuccess}>\r\n         Dispatch Success\r\n       </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default TestHookReducer;\r\n"]},"metadata":{},"sourceType":"module"}